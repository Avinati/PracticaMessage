import React, { useState, useEffect } from "react";
import Logo from '/public/–õ–æ–≥–æ.png'
import Fav from '/public/Fav.png'
import Pfp from '/public/pfp.png'
import ForYou from '/public/person.png'
import Friends from '/public/friends.png'
import Chat from '/public/chatred.png'
import Set from '/public/settings.png'
import './css/messanger.css'
import { BrowserRouter, Routes, Route, Link, useNavigate } from 'react-router-dom'

function Messenger() {
    const navigate = useNavigate();
    const [isAuthenticated, setIsAuthenticated] = useState(false);
    const [user, setUser] = useState(null);
    const [loading, setLoading] = useState(true);

    const chats = [
        { id: 1, name: "–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤", lastMessage: "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?", unread: 2, online: true, time: "12:30" },
        { id: 2, name: "–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞", lastMessage: "–í—Å—Ç—Ä–µ—á–∞–µ–º—Å—è –∑–∞–≤—Ç—Ä–∞?", unread: 0, online: true, time: "11:45" },
        { id: 3, name: "–ò–≤–∞–Ω –°–∏–¥–æ—Ä–æ–≤", lastMessage: "–û—Ç–ø—Ä–∞–≤–∏–ª —Ñ–∞–π–ª", unread: 1, online: false, time: "10:20" },
        { id: 4, name: "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –ë–µ–ª–æ–≤–∞", lastMessage: "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å!", unread: 0, online: true, time: "09:15" },
        { id: 5, name: "–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤", lastMessage: "–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ?", unread: 3, online: false, time: "08:30" }
    ];

    useEffect(() => {
        checkAuthentication();
    }, []);

    const checkAuthentication = async () => {
        const token = localStorage.getItem('token');
        console.log('–¢–æ–∫–µ–Ω –∏–∑ localStorage:', token);
        
        if (!token) {
            console.log('–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ª–æ–≥–∏–Ω');
            setIsAuthenticated(false);
            setLoading(false);
            navigate('/login');
            return;
        }

        try {
            console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...');
            const response = await fetch('http://localhost:5000/api/auth/verify', {
                method: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                }
            });

            console.log('–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ verify:', response.status);

            if (response.ok) {
                console.log('–¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω');
                setIsAuthenticated(true);
                
                // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                const profileResponse = await fetch('http://localhost:5000/api/users/profile', {
                    method: 'GET',
                    headers: {
                        'Authorization': `Bearer ${token}`,
                        'Content-Type': 'application/json'
                    }
                });

                if (profileResponse.ok) {
                    const userData = await profileResponse.json();
                    setUser(userData.user);
                    localStorage.setItem('user', JSON.stringify(userData.user));
                    console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã:', userData.user);
                } else {
                    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ —É–¥–∞–ª—Å—è
                    const savedUser = localStorage.getItem('user');
                    if (savedUser) {
                        setUser(JSON.parse(savedUser));
                        console.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
                    }
                }
            } else {
                console.log('–¢–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω, –æ—á–∏—â–∞–µ–º localStorage');
                setIsAuthenticated(false);
                localStorage.removeItem('token');
                localStorage.removeItem('user');
                navigate('/login');
            }
        } catch (error) {
            console.error('Auth check error:', error);
            // –ü—Ä–∏ –æ—à–∏–±–∫–µ —Å–µ—Ç–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            const savedUser = localStorage.getItem('user');
            if (savedUser) {
                console.log('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
                setIsAuthenticated(true);
                setUser(JSON.parse(savedUser));
            } else {
                setIsAuthenticated(false);
                localStorage.removeItem('token');
                navigate('/login');
            }
        } finally {
            setLoading(false);
        }
    };

    const handleChatClick = (chatId, chatName) => {
        if (!isAuthenticated) {
            alert('–í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —á–∞—Ç');
            navigate('/login');
            return false;
        }
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —á–∞—Ç
        navigate(`/chat/${chatId}`);
        return true;
    };

    const handleNewChat = () => {
        if (!isAuthenticated) {
            alert('–í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç');
            navigate('/login');
            return;
        }
        // –õ–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞
        alert('–§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ —Å–∫–æ—Ä–æ');
    };

    const handleSearchChats = (e) => {
        if (!isAuthenticated) {
            alert('–í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç —á—Ç–æ–±—ã –∏—Å–∫–∞—Ç—å —á–∞—Ç—ã');
            navigate('/login');
            return;
        }
        // –õ–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞ —á–∞—Ç–æ–≤
        console.log('–ü–æ–∏—Å–∫ —á–∞—Ç–æ–≤:', e.target.value);
    };

    if (loading) {
        return (
            <div className="main-content">
                <div className="loading-container">
                    <div className="loading-spinner"></div>
                    <div className="loading-text">–ó–∞–≥—Ä—É–∑–∫–∞ —á–∞—Ç–æ–≤...</div>
                </div>
            </div>
        );
    }

    if (!isAuthenticated) {
        return (
            <div className="main-content">
                <div className="auth-required">
                    <div className="auth-message">
                        <h2>üîê –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h2>
                        <p>–ß–∞—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º. –í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.</p>
                        <div className="auth-buttons">
                            <button 
                                className="login-btn" 
                                onClick={() => navigate('/login')}
                            >
                                –í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç
                            </button>
                            <button 
                                className="register-btn"
                                onClick={() => navigate('/register')}
                            >
                                –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        );
    }

    return (
        <>
            <div className="main-content">
                <div className="header-box">
                    <div className="header-container">
                        <Link to="/">
                            <img className="logo" src={Logo} alt="–õ–æ–≥–æ—Ç–∏–ø" />
                        </Link>
                        <input 
                            type="text" 
                            className="search-input" 
                            placeholder="–ü–æ–∏—Å–∫..." 
                            onFocus={() => !isAuthenticated && navigate('/login')}
                        />
                        <Link to="/favorite">
                            <button className="fav-btn">
                                <img src={Fav} alt="–ò–∑–±—Ä–∞–Ω–Ω–æ–µ" />
                            </button>
                        </Link>
                        
                        {/* –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è */}
                        <Link to={isAuthenticated ? "/profile" : "/login"}>
                            <button className="pfp-btn">
                                <img 
                                    src={isAuthenticated ? (user?.avatar_url || Pfp) : Pfp} 
                                    alt="–ü—Ä–æ—Ñ–∏–ª—å" 
                                />
                                {isAuthenticated && user && (
                                    <span className="user-online-dot"></span>
                                )}
                            </button>
                        </Link>
                    </div>
                </div>
                
                <div className="content-wrapper">
                    <div className="menu">
                        <Link to="/" className="menu-link">
                            <button className="foryou-btn">
                                <img src={ForYou} alt="–î–ª—è –≤–∞—Å" />
                            </button>
                            <p className="text">–î–ª—è –≤–∞—Å</p>
                        </Link>
                        
                        <Link to="/frinds" className="menu-link">
                            <button className="friends-btn">
                                <img src={Friends} alt="–î—Ä—É–∑—å—è" />
                            </button>
                            <p className="text">–î—Ä—É–∑—å—è</p>
                        </Link>
                        
                        <div className="menu-link active">
                            <button className="chat-btn">
                                <img src={Chat} alt="–ß–∞—Ç—ã" />
                            </button>
                            <p className="text1">–ß–∞—Ç—ã</p>
                        </div>
                        
                        <Link to="/settings" className="menu-link">
                            <button className="set-btn">
                                <img src={Set} alt="–ù–∞—Å—Ç—Ä–æ–π–∫–∏" />
                            </button>
                            <p className="text">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</p>
                        </Link>
                    </div>
                    
                    <div className="chats-container">
                       
                        
                        <div className="chats-controls">
                            <input 
                                type="text" 
                                className="chats-search" 
                                placeholder="–ü–æ–∏—Å–∫ —á–∞—Ç–æ–≤..." 
                                onChange={handleSearchChats}
                                onFocus={() => !isAuthenticated && navigate('/login')}
                            />
                            <button 
                                className="new-chat-btn"
                                onClick={handleNewChat}
                            >
                                + –ù–æ–≤—ã–π —á–∞—Ç
                            </button>
                        </div>
                        
                        <div className="chats-list">
                            {chats.length > 0 ? (
                                chats.map(chat => (
                                    <div 
                                        key={chat.id} 
                                        className={`chat-item ${chat.unread > 0 ? 'unread' : ''}`}
                                        onClick={() => handleChatClick(chat.id, chat.name)}
                                    >
                                        {chat.unread > 0 && (
                                            <span className="unread-badge">{chat.unread}</span>
                                        )}
                                        <div className="chat-avatar">
                                            <img src={Pfp} alt="–ê–≤–∞—Ç–∞—Ä" />
                                            <span className={`online-status ${chat.online ? 'online' : 'offline'}`}></span>
                                        </div>
                                        <div className="chat-info">
                                            <div className="chat-header-info">
                                                <span className="chat-name">{chat.name}</span>
                                                <span className="chat-time">{chat.time}</span>
                                            </div>
                                            <p className="chat-last-message">{chat.lastMessage}</p>
                                        </div>
                                    </div>
                                ))
                            ) : (
                                <div className="no-chats">
                                    <div className="no-chats-icon">üí¨</div>
                                    <h3>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —á–∞—Ç–æ–≤</h3>
                                    <p>–ù–∞—á–Ω–∏—Ç–µ –æ–±—â–µ–Ω–∏–µ, –Ω–∞–ø–∏—Å–∞–≤ –∫–æ–º—É-–Ω–∏–±—É–¥—å!</p>
                                    <button 
                                        className="start-chat-btn"
                                        onClick={handleNewChat}
                                    >
                                        –ù–∞—á–∞—Ç—å –ø–µ—Ä–≤—ã–π —á–∞—Ç
                                    </button>
                                </div>
                            )}
                        </div>
                        
                    
                    </div>
                </div>

                <div className="footer-box">
                    <div className="footer-container">
                        <img className="logo2" src={Logo} alt="–õ–æ–≥–æ—Ç–∏–ø" />
                        <div className="footer-columns">
                            <div className="footer-column">
                                <li>–°—Ç—Ä–∞–Ω–∏—Ü—ã</li>
                                <ul><Link to="/">–ì–ª–∞–≤–Ω–∞—è</Link></ul>
                                <ul><Link to="/favorite">–ò–∑–±—Ä–∞–Ω–Ω–æ–µ</Link></ul>
                                <ul><Link to="/profile">–ü—Ä–æ—Ñ–∏–ª—å</Link></ul>
                                <ul><Link to="/frinds">–î—Ä—É–∑—å—è</Link></ul>
                                <ul><Link to="/settings">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</Link></ul>
                                <ul><Link to="/messenger">–ß–∞—Ç—ã</Link></ul>
                            </div>
                            <div className="footer-column">
                                <li>–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è</li>
                                <ul>–£—Å–ª–æ–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</ul>
                                <ul>–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</ul>
                                <ul>–ü–æ–ª–∏—Ç–∏–∫–∞ –∫—É–∫–∏</ul>
                                <ul>–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</ul>
                                <ul>–û –Ω–∞—Å</ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </>
    )
}

export default Messenger;