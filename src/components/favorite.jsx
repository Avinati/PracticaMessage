import React, { useState, useEffect } from "react";
import { Link } from 'react-router-dom';
import Logo from '/public/–õ–æ–≥–æ.png'
import Fav from '/public/Fav.png'
import Pfp from '/public/pfp.png'
import './css/favorite.css'
import Like from '/public/like.png'
import Comm from '/public/comm.png'
import Share from '/public/share.png'
import FavPost from '/public/favpost.png'
import FavPostFilled from '/public/favpost.png'

function Favorite() {
    const [posts, setPosts] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);

    useEffect(() => {
        fetchFavoritePosts();
    }, []);

    const fetchFavoritePosts = async () => {
        try {
            setLoading(true);
            const token = localStorage.getItem('token');
            
            if (!token) {
                setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É');
                setLoading(false);
                return;
            }

            const response = await fetch('http://localhost:5000/api/users/favorites/posts', {
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                }
            });
            
            if (response.ok) {
                const data = await response.json();
                setPosts(data.favorites || []);
                setError(null);
            } else {
                const errorData = await response.json();
                setError(errorData.error || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ');
            }
        } catch (error) {
            console.error('Error fetching favorites:', error);
            setError('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
            // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º mock –¥–∞–Ω–Ω—ã–µ
            setPosts(getMockFavoritePosts());
        } finally {
            setLoading(false);
        }
    };

    const getMockFavoritePosts = () => {
        return [
            {
                post_id: 1,
                username: "@creative_soul",
                nick: "creative_soul",
                content: "–≠—Ç–æ –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–π –ø–æ—Å—Ç –æ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–µ –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–∏! üé®",
                likes_count: 127,
                comments_count: 24,
                shares: 8,
                title: "–ú–æ–π —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –ø—Ä–æ—Ü–µ—Å—Å",
                created_at: "2024-01-15T10:30:00Z",
                avatar_url: Pfp,
                is_liked: true,
                favorited_at: "2024-01-15T11:00:00Z"
            },
            {
                post_id: 2,
                username: "@tech_guru",
                nick: "tech_guru",
                content: "–ù–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –º–µ–Ω—è—é—Ç –Ω–∞—à –º–∏—Ä –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. –ß—Ç–æ –¥—É–º–∞–µ—Ç–µ –æ –±—É–¥—É—â–µ–º AI?",
                likes_count: 89,
                comments_count: 42,
                shares: 15,
                title: "–ë—É–¥—É—â–µ–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞",
                created_at: "2024-01-14T15:45:00Z",
                avatar_url: Pfp,
                is_liked: false,
                favorited_at: "2024-01-14T16:20:00Z"
            },
            {
                post_id: 3,
                username: "@travel_lover",
                nick: "travel_lover",
                content: "–ù–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–µ –ø–µ–π–∑–∞–∂–∏ –∏–∑ –º–æ–µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è! üåÑ",
                likes_count: 256,
                comments_count: 31,
                shares: 12,
                title: "–ì–æ—Ä–Ω—ã–µ –ø–µ–π–∑–∞–∂–∏",
                created_at: "2024-01-13T08:20:00Z",
                avatar_url: Pfp,
                is_liked: true,
                favorited_at: "2024-01-13T09:15:00Z"
            }
        ];
    };

    const handleRemoveFavorite = async (postId) => {
    try {
        const token = localStorage.getItem('token');
        const response = await fetch(`http://localhost:5000/api/users/posts/${postId}/favorite`, {
            method: 'DELETE',
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            }
        });

        if (response.ok) {
            setPosts(prevPosts => prevPosts.filter(post => post.post_id !== postId));
        } else {
            const errorData = await response.json();
            throw new Error(errorData.error || '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ');
        }
    } catch (error) {
        console.error('Error removing favorite:', error);
        alert(error.message);
    }
};

    const handleLike = async (postId) => {
        try {
            const token = localStorage.getItem('token');
            const response = await fetch(`http://localhost:5000/api/users/posts/${postId}/like`, {
                method: 'POST',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                const data = await response.json();
                // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                setPosts(prevPosts => 
                    prevPosts.map(post => 
                        post.post_id === postId 
                            ? { 
                                ...post, 
                                likes_count: data.liked ? post.likes_count + 1 : post.likes_count - 1,
                                is_liked: data.liked 
                            }
                            : post
                    )
                );
            }
        } catch (error) {
            console.error('Error liking post:', error);
            // Fallback –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            setPosts(prevPosts => 
                prevPosts.map(post => 
                    post.post_id === postId 
                        ? { 
                            ...post, 
                            likes_count: post.is_liked ? post.likes_count - 1 : post.likes_count + 1,
                            is_liked: !post.is_liked 
                        }
                        : post
                )
            );
        }
    };

    const formatDate = (dateString) => {
        const date = new Date(dateString);
        const now = new Date();
        const diffInHours = Math.floor((now - date) / (1000 * 60 * 60));
        
        if (diffInHours < 1) {
            return '—Ç–æ–ª—å–∫–æ —á—Ç–æ';
        } else if (diffInHours < 24) {
            return `${diffInHours} —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥`;
        } else {
            return `${Math.floor(diffInHours / 24)} –¥–Ω–µ–π –Ω–∞–∑–∞–¥`;
        }
    };

    const handleComment = (postId) => {
        alert(`–§—É–Ω–∫—Ü–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è –ø–æ—Å—Ç–∞ ${postId} –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø–æ–∑–∂–µ`);
    };

    const handleShare = (postId) => {
        alert(`–§—É–Ω–∫—Ü–∏—è "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" –¥–ª—è –ø–æ—Å—Ç–∞ ${postId} –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø–æ–∑–∂–µ`);
    };

    if (loading) {
        return (
            <div className="main-content">
                <div className="header-box">
                    <div className="header-container">
                        <Link to="/">
                            <img className="logo" src={Logo} alt="–õ–æ–≥–æ—Ç–∏–ø" />
                        </Link>
                        <input type="text" className="search-input" placeholder="–ü–æ–∏—Å–∫..." />
                        <Link to="/favorite">
                            <button className="fav-btn">
                                <img src={Fav} alt="–ò–∑–±—Ä–∞–Ω–Ω–æ–µ" />
                            </button>
                        </Link>
                        <Link to="/profile">
                            <button className="pfp-btn">
                                <img src={Pfp} alt="–ü—Ä–æ—Ñ–∏–ª—å" />
                            </button>
                        </Link>
                    </div>
                </div>
                
                <div className="favorite-content">
                    <div className="loading-container">
                        <div className="loading-spinner"></div>
                        <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤...</p>
                    </div>
                </div>
            </div>
        );
    }

    if (error) {
        return (
            <div className="main-content">
                <div className="header-box">
                    <div className="header-container">
                        <Link to="/">
                            <img className="logo" src={Logo} alt="–õ–æ–≥–æ—Ç–∏–ø" />
                        </Link>
                        <input type="text" className="search-input" placeholder="–ü–æ–∏—Å–∫..." />
                        <Link to="/favorite">
                            <button className="fav-btn">
                                <img src={Fav} alt="–ò–∑–±—Ä–∞–Ω–Ω–æ–µ" />
                            </button>
                        </Link>
                        <Link to="/profile">
                            <button className="pfp-btn">
                                <img src={Pfp} alt="–ü—Ä–æ—Ñ–∏–ª—å" />
                            </button>
                        </Link>
                    </div>
                </div>
                
                <div className="favorite-content">
                    <div className="error-container">
                        <div className="error-message">
                            <h3>–û—à–∏–±–∫–∞</h3>
                            <p>{error}</p>
                            <button onClick={fetchFavoritePosts} className="retry-btn">
                                –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        );
    }

    return (
        <>
            <div className="main-content">
                {/* –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ö–µ–¥–µ—Ä */}
                <div className="header-box">
                    <div className="header-container">
                        <Link to="/">
                            <img className="logo" src={Logo} alt="–õ–æ–≥–æ—Ç–∏–ø" />
                        </Link>
                        <input type="text" className="search-input" placeholder="–ü–æ–∏—Å–∫..." />
                        <Link to="/favorite">
                            <button className="fav-btn">
                                <img src={Fav} alt="–ò–∑–±—Ä–∞–Ω–Ω–æ–µ" />
                            </button>
                        </Link>
                        <Link to="/profile">
                            <button className="pfp-btn">
                                <img src={Pfp} alt="–ü—Ä–æ—Ñ–∏–ª—å" />
                            </button>
                        </Link>
                    </div>
                </div>
                
                {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ */}
                <div className="favorite-content">
                    {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
                    <div className="favorite-header">
                        <h1>–ò–∑–±—Ä–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã</h1>
                        <p className="favorite-subtitle">
                            {posts.length > 0 
                                ? `–£ –≤–∞—Å ${posts.length} –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö ${posts.length === 1 ? '–ø–æ—Å—Ç' : posts.length < 5 ? '–ø–æ—Å—Ç–∞' : '–ø–æ—Å—Ç–æ–≤'}`
                                : '–ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø–æ—Å—Ç—ã, –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'
                            }
                        </p>
                    </div>

                    {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤ */}
                    <div className="posts-container">
                        {posts.length === 0 ? (
                            <div className="empty-favorites">
                                <div className="empty-icon">‚≠ê</div>
                                <h3>–ü–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤</h3>
                                <p>–î–æ–±–∞–≤–ª—è–π—Ç–µ –ø–æ—Å—Ç—ã –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ, –Ω–∞–∂–∏–º–∞—è –Ω–∞ –∏–∫–æ–Ω–∫—É –∑–∞–∫–ª–∞–¥–∫–∏</p>
                                <Link to="/" className="browse-posts-btn">
                                    –ü–µ—Ä–µ–π—Ç–∏ –∫ –ª–µ–Ω—Ç–µ
                                </Link>
                            </div>
                        ) : (
                            <div className="posts-grid">
                                {posts.map((post) => (
                                    <div className="post-card favorite-post" key={post.post_id}>
                                        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ—Å—Ç–∞ —Å –∞–≤–∞—Ç–∞—Ä–∫–æ–π –∏ –Ω–∏–∫–Ω–µ–π–º–æ–º */}
                                        <div className="post-header">
                                            <div className="user-info">
                                                <img 
                                                    src={post.avatar_url || Pfp} 
                                                    alt="–ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" 
                                                    className="user-avatar" 
                                                />
                                                <div className="user-details">
                                                    <span className="username">@{post.nick || post.username}</span>
                                                    <span className="post-date">
                                                        –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ: {formatDate(post.favorited_at)}
                                                    </span>
                                                </div>
                                            </div>
                                            <div className="post-actions-top">
                                                <button 
                                                    className="remove-favorite-btn"
                                                    onClick={() => handleRemoveFavorite(post.post_id)}
                                                    title="–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"
                                                >
                                                    <img 
                                                        src={FavPostFilled} 
                                                        alt="–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ" 
                                                        className="favpost-icon filled" 
                                                    />
                                                </button>
                                            </div>
                                        </div>
                                        
                                        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ—Å—Ç–∞ */}
                                        {post.title && (
                                            <div className="post-title">
                                                <h3>{post.title}</h3>
                                            </div>
                                        )}

                                        {/* –ö–æ–Ω—Ç–µ–Ω—Ç –ø–æ—Å—Ç–∞ */}
                                        <div className="post-content">
                                            <p>{post.content}</p>
                                            
                                            {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ */}
                                            {post.image_url && (
                                                <div className="post-image-container">
                                                    <div className="post-image">
                                                        <img 
                                                            src={post.image_url} 
                                                            alt="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ—Å—Ç–∞" 
                                                        />
                                                    </div>
                                                </div>
                                            )}
                                        
                                            {/* –ü–∞–Ω–µ–ª—å –¥–µ–π—Å—Ç–≤–∏–π */}
                                            <div className="post-actions">
                                                <button 
                                                    className={`action-btn like-btn ${post.is_liked ? 'liked' : ''}`}
                                                    onClick={() => handleLike(post.post_id)}
                                                >
                                                    <img 
                                                        src={Like} 
                                                        alt="–õ–∞–π–∫" 
                                                        className="action-icon" 
                                                    />
                                                    <span className="action-count">{post.likes_count}</span>
                                                </button>
                                                <button 
                                                    className="action-btn comment-btn"
                                                    onClick={() => handleComment(post.post_id)}
                                                >
                                                    <img 
                                                        src={Comm} 
                                                        alt="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏" 
                                                        className="action-icon" 
                                                    />
                                                    <span className="action-count">{post.comments_count}</span>
                                                </button>
                                                <button 
                                                    className="action-btn share-btn"
                                                    onClick={() => handleShare(post.post_id)}
                                                >
                                                    <img 
                                                        src={Share} 
                                                        alt="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" 
                                                        className="action-icon" 
                                                    />
                                                    <span className="action-count">{post.shares || 0}</span>
                                                </button>
                                            </div>
                                        </div>

                                        {/* –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–ª–Ω—É—é –≤–µ—Ä—Å–∏—é –ø–æ—Å—Ç–∞ */}
                                        <div className="post-footer">
                                            <Link 
                                                to={`/post/${post.post_id}`} 
                                                className="view-full-post"
                                            >
                                                –ß–∏—Ç–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é ‚Üí
                                            </Link>
                                        </div>
                                    </div>
                                ))}
                            </div>
                        )}
                    </div>
                </div>
                
                <div className="footer-box">
                    <div className="footer-container">
                        <img className="logo2" src={Logo} alt="–õ–æ–≥–æ—Ç–∏–ø" />
                        <div className="footer-columns">
                            <div className="footer-column">
                                <li>–°—Ç—Ä–∞–Ω–∏—Ü—ã</li>
                                <ul><Link to="/">–ì–ª–∞–≤–Ω–∞—è</Link></ul>
                                <ul><Link to="/favorite">–ò–∑–±—Ä–∞–Ω–Ω–æ–µ</Link></ul>
                                <ul><Link to="/profile">–ü—Ä–æ—Ñ–∏–ª—å</Link></ul>
                                <ul><Link to="/friends">–î—Ä—É–∑—å—è</Link></ul>
                                <ul><Link to="/settings">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</Link></ul>
                                <ul><Link to="/messenger">–ß–∞—Ç—ã</Link></ul>
                            </div>
                            <div className="footer-column">
                                <li>–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è</li>
                                <ul>–£—Å–ª–æ–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</ul>
                                <ul>–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</ul>
                                <ul>–ü–æ–ª–∏—Ç–∏–∫–∞ –∫—É–∫–∏</ul>
                                <ul>–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</ul>
                                <ul>–û –Ω–∞—Å</ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </>
    )
}

export default Favorite;